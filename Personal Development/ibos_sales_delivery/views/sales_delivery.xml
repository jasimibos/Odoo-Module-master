<odoo>
    <data>
        <record id="view_sales_delivery_tree" model="ir.ui.view">
            <field name="name">stock.picking.tree</field>
            <field name="model">stock.picking</field>
            <field name="arch" type="xml">
                <tree default_order="id desc" string="Picking list" js_class="lazy_column_list" multi_edit="1"
                      sample="1">
                    <header>
                        <button name="do_unreserve" type="object" string="Unreserve"/>
                        <button name="action_assign" type="object" string="Check Availability"/>
                    </header>
                    <field name="priority" optional="show" widget="priority" nolabel="1"/>
                    <field name="name" decoration-bf="1"/>
                    <field name="location_id" options="{'no_create': True}" string="From"
                           groups="stock.group_stock_multi_locations" optional="show"/>
                    <field name="location_dest_id" options="{'no_create': True}" string="To"
                           groups="stock.group_stock_multi_locations" optional="show"/>
                    <field name="partner_id" optional="show"/>
                    <field name="is_signed" string="Signed" optional="hide" groups="stock.group_stock_sign_delivery"/>
                    <field name="user_id" optional="hide" widget="many2one_avatar_user"/>
                    <field name="scheduled_date" optional="show" widget="remaining_days"
                           attrs="{'invisible':[('state', 'in', ('done', 'cancel'))]}"/>
                    <field name="picking_type_code" invisible="1"/>
                    <field name="products_availability_state" invisible="1" options='{"lazy": true}'/>
                    <field name="products_availability" options='{"lazy": true}'
                           optional="hide"
                           attrs="{'invisible': ['|', ('picking_type_code', '!=', 'outgoing'), ('state', 'not in', ['confirmed', 'waiting', 'assigned'])]}"
                           decoration-success="state == 'assigned' or products_availability_state == 'available'"
                           decoration-warning="state != 'assigned' and products_availability_state in ('expected', 'available')"
                           decoration-danger="state != 'assigned' and products_availability_state == 'late'"/>
                    <field name="date_deadline" optional="hide" widget="remaining_days"
                           attrs="{'invisible':[('state', 'in', ('done', 'cancel'))]}"/>
                    <field name="date_done" string="Effective Date" optional="hide"/>
                    <field name="origin" optional="show"/>
                    <field name="picking_type_id" optional="hide"/>
                    <field name="company_id" groups="base.group_multi_company" optional="show"/>
                    <field name="state" optional="show" widget="badge" decoration-success="state == 'done'"
                           decoration-info="state not in ('done', 'cancel', 'draft')"
                           decoration-muted="state == 'draft'"/>
                    <field name="activity_exception_decoration" widget="activity_exception"/>
                    <field name="json_popover" nolabel="1" widget="stock_rescheduling_popover"
                           attrs="{'invisible': [('json_popover', '=', False)]}"/>
                </tree>
            </field>
        </record>

        <record id="view_sales_delivery_search" model="ir.ui.view">
            <field name="name">stock.picking.internal.search</field>
            <field name="model">stock.picking</field>
            <field name="arch" type="xml">
                <search string="Picking Lists">
                    <field name="name" string="Transfer"
                           filter_domain="['|', ('name', 'ilike', self), ('origin', 'ilike', self)]"/>
                    <field name="partner_id" filter_domain="[('partner_id', 'child_of', self)]"/>
                    <field name="origin"/>
                    <field name="product_id"
                           filter_domain="['|', '|', ('product_id.default_code', 'ilike', self), ('product_id.name', 'ilike', self), ('product_id.barcode', 'ilike', self)]"/>
                    <field name="picking_type_id"/>
                    <filter string="Today" name="today"
                            domain="[('create_date', '&gt;', (context_today() - datetime.timedelta(days=1)).strftime('%%Y-%%m-%%d'))]"/>
                    <filter string="Starred" name="starred" domain="[('priority', '=', '1')]"/>
                    <separator/>
                    <filter name="draft" string="Draft" domain="[('state', '=', 'draft')]" help="Draft Moves"/>
                    <filter name="waiting" string="Waiting" domain="[('state', 'in', ('confirmed', 'waiting'))]"
                            help="Waiting Moves"/>
                    <filter name="available" string="Ready" domain="[('state', '=', 'assigned')]"
                            help="Assigned Moves"/>
                    <filter name="done" string="Done" domain="[('state', '=', 'done')]"
                            help="Pickings already processed"/>
                    <filter name="cancel" string="Cancelled" domain="[('state', '=', 'cancel')]"
                            help="Cancelled Moves"/>
                    <separator/>
                    <filter name="late" string="Late" help="Deadline exceed or/and by the scheduled"
                            domain="[('state', 'in', ('assigned', 'waiting', 'confirmed')), '|', '|', ('has_deadline_issue', '=', True), ('date_deadline', '&lt;', current_date), ('scheduled_date', '&lt;', current_date)]"/>
                    <filter name="backorder" string="Backorders"
                            domain="[('backorder_id', '!=', False), ('state', 'in', ('assigned', 'waiting', 'confirmed'))]"
                            help="Remaining parts of picking partially processed"/>
                    <separator/>
                    <filter invisible="1" string="Late Activities" name="activities_overdue"
                            domain="[('my_activity_date_deadline', '&lt;', context_today().strftime('%Y-%m-%d'))]"
                            help="Show all records which has next action date is before today"/>
                    <filter invisible="1" string="Today Activities" name="activities_today"
                            domain="[('my_activity_date_deadline', '=', context_today().strftime('%Y-%m-%d'))]"/>
                    <filter invisible="1" string="Future Activities" name="activities_upcoming_all"
                            domain="[('my_activity_date_deadline', '&gt;', context_today().strftime('%Y-%m-%d'))]"/>
                    <separator/>
                    <group expand="0" string="Group By">
                        <filter string="Status" name="status" domain="[]" context="{'group_by': 'state'}"/>
                        <filter string="Scheduled Date" name="expected_date" domain="[]"
                                context="{'group_by': 'scheduled_date'}"/>
                        <filter string="Source Document" name="origin" domain="[]" context="{'group_by': 'origin'}"/>
                        <filter string="Operation Type" name="picking_type" domain="[]"
                                context="{'group_by': 'picking_type_id'}"/>
                    </group>
                </search>
            </field>
        </record>

        <record id="sales_delivery_action" model="ir.actions.act_window">
            <field name="name">Sales Delivery</field>
            <field name="res_model">stock.picking</field>
            <field name="type">ir.actions.act_window</field>
            <field name="view_mode">tree,kanban,form,calendar</field>
            <field name="domain">[('name', '=ilike', '%OUT%')]</field>
            <field name="context">{'contact_display': 'partner_address', 'default_company_id':
                allowed_company_ids[0],'search_default_available': 1}
            </field>
            <field name="view_id" ref="view_sales_delivery_tree"/>
            <field name="search_view_id" ref="view_sales_delivery_search"/>
            <field name="help" type="html">
                <p class="o_view_nocontent_smiling_face">
                    No transfer found. Let's create one!
                </p>
                <p>
                    Transfers allow you to move products from one location to another.
                </p>
            </field>
        </record>

        <menuitem id="sales_delivery" name="Sales Delivery" parent="sale.menu_sale_report" sequence="6"
                  groups="stock.group_stock_manager,stock.group_stock_user" action="sales_delivery_action"/>
    </data>
</odoo>